@startuml
class BinaryNumber {
  + sum(NumberType): NumberType
  + multiply(NumberType): NumberType
  + divide(NumberType): NumberType
  + subtract(NumberType): NumberType
}
class Calculator {
  + multiply(NumberType, NumberType): NumberType
  + divide(NumberType, NumberType): NumberType
  + sum(NumberType, NumberType): NumberType
  + subtract(NumberType, NumberType): NumberType
}
class HexaDecimalNumber {
  + subtract(NumberType): NumberType
  + sum(NumberType): NumberType
  + divide(NumberType): NumberType
  + multiply(NumberType): NumberType
}
class Main {
  + main(String[]): void
}
abstract class NumberType {
  - radix: int
  + REAL_RADIX: int
  + BINARY_RADIX: int
  + HEXADECIMAL_RADIX: int
  - number: String
  + OCTAL_RADIX: int
  + getNumber(): String
  + getRadix(): int
  + createArithmeticException(boolean): void
  + sum(NumberType): NumberType
  + canBeCalculated(int, int): boolean
  + toString(): String
  + subtract(NumberType): NumberType
  + parseNumber(String, int): int
  + multiply(NumberType): NumberType
  + divide(NumberType): NumberType
}
class OctalNumber {
  + subtract(NumberType): NumberType
  + divide(NumberType): NumberType
  + sum(NumberType): NumberType
  + multiply(NumberType): NumberType
}
class RealNumber {
  + divide(NumberType): NumberType
  + sum(NumberType): NumberType
  + subtract(NumberType): NumberType
  + multiply(NumberType): NumberType
}

BinaryNumber       --|>  NumberType
HexaDecimalNumber  --|>  NumberType
OctalNumber        --|>  NumberType
RealNumber         --|>  NumberType
@enduml